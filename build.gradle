buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

plugins {
    id 'net.nemerosa.versioning' version '1.5.0'
}

apply plugin: 'io.codearte.nexus-staging'

/**
 * Meta information
 */

allprojects {
    group = 'net.nemerosa'
    version = versioning.info.display
}

/**
 * Dependencies
 */

ext {
    springVersion = '4.1.5.RELEASE'
    libraries = [
            commons_lang    : 'org.apache.commons:commons-lang3:3.3.2',
            jackson_databind: 'com.fasterxml.jackson.core:jackson-databind:2.3.3',
            lombok          : 'org.projectlombok:lombok:1.16.4',
            spring_webmvc   : "org.springframework:spring-webmvc:${springVersion}",
            junit           : 'junit:junit:4.11',
    ]
}

subprojects {

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'

}

/**
 * Publication
 */

if (project.hasProperty('release')) {

    subprojects {

        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }
    }

    allprojects {

        // Signature of artifacts

        apply plugin: 'signing'
        apply plugin: 'maven'

        signing {
            sign configurations.archives
        }

        // OSSRH publication

        uploadArchives {
            repositories {
                mavenDeployer {
                    // POM signature
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    // Target repository
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                    pom.project {
                        name project.name
                        description project.description
                        packaging 'jar'
                        url 'https://github.com/nemerosa/resources'

                        scm {
                            connection 'scm:git:https://github.com/nemerosa/resources.git'
                            developerConnection 'scm:git:git@github.com:nemerosa/resources.git'
                            url 'https://github.com/nemerosa/resources.git'
                        }

                        licenses {
                            license {
                                name 'The MIT License (MIT)'
                                url 'http://opensource.org/licenses/MIT'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'dcoraboeuf'
                                name = 'Damien Coraboeuf'
                                email = 'damien.coraboeuf@gmail.com'
                            }
                        }
                    }
                }
            }
        }

    }
}

nexusStaging {
    username = ossrhUser
    password = ossrhPassword
}

/**
 * Wrapper definition
 */

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
